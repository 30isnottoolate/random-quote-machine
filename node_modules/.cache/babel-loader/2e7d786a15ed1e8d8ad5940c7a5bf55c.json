{"ast":null,"code":"var _jsxFileName = \"/home/hawk/repos/random-quote-machine/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomQuoteMachine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      numOfQuotes: 0,\n      quote: \"Loading...\",\n      author: \"\"\n    }; //this.handleClick = this.handleClick.bind(this);\n    //this.randomIndexGen = this.randomIndexGen.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\").then(response => {\n      return response.json();\n    }).then(data => {\n      let randomIndex = this.randomIndexGen(data.quotes.length);\n      this.setState({\n        quotes: data.quotes,\n        numOfQuotes: data.quotes.length,\n        quote: data.quotes[randomIndex].quote,\n        author: data.quotes[randomIndex].author\n      });\n    });\n  }\n\n  handleClick() {\n    let randomIndex = this.randomIndexGen(this.state.numOfQuotes);\n    this.setState(state => ({ ...state,\n      quote: state.quotes[randomIndex].quote,\n      author: state.quotes[randomIndex].author\n    }));\n  }\n\n  randomIndexGen(numOfQuotes) {\n    return Math.floor(Math.random() * numOfQuotes);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text\",\n        children: this.state.quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\",\n        children: this.state.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        className: \"buttons\",\n        onClick: this.handleClick,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        className: \"buttons\",\n        href: \"https://twitter.com/intent/tweet?text=\" + encodeURIComponent('\"' + this.state.quote + '\" ' + this.state.author),\n        target: \"_top\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst container = ReactDOM.createRoot(document.getElementById(\"root\"));\ncontainer.render( /*#__PURE__*/_jsxDEV(RandomQuoteMachine, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 18\n}, this));","map":{"version":3,"names":["React","ReactDOM","RandomQuoteMachine","Component","constructor","props","state","quotes","numOfQuotes","quote","author","componentDidMount","fetch","then","response","json","data","randomIndex","randomIndexGen","length","setState","handleClick","Math","floor","random","render","encodeURIComponent","container","createRoot","document","getElementById"],"sources":["/home/hawk/repos/random-quote-machine/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\nclass RandomQuoteMachine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      numOfQuotes: 0,\n      quote: \"Loading...\",\n      author: \"\"\n    };\n    //this.handleClick = this.handleClick.bind(this);\n    //this.randomIndexGen = this.randomIndexGen.bind(this);\n  }\n  \n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\")\n    .then(response => {\n      return response.json();\n    })\n      .then(data => {\n      let randomIndex = this.randomIndexGen(data.quotes.length);\n      this.setState({\n        quotes: data.quotes,\n        numOfQuotes: data.quotes.length,\n        quote: data.quotes[randomIndex].quote,\n        author: data.quotes[randomIndex].author\n      });\n    });\n  }\n  \n  handleClick() {\n    let randomIndex = this.randomIndexGen(this.state.numOfQuotes);\n    this.setState((state) => ({\n      ...state,\n      quote: state.quotes[randomIndex].quote,\n      author: state.quotes[randomIndex].author\n    }));\n  }\n  \n  randomIndexGen(numOfQuotes) {\n    return Math.floor(Math.random()*numOfQuotes);\n  }\n\n  render() {\n    return (\n      <div>\n        <p id=\"text\">{this.state.quote}</p>\n        <p id=\"author\">{this.state.author}</p>\n        <button id=\"new-quote\" className=\"buttons\" onClick={this.handleClick}>New Quote</button>\n        <a id=\"tweet-quote\" className=\"buttons\" href={\"https://twitter.com/intent/tweet?text=\" + encodeURIComponent('\"' + this.state.quote + '\" ' + this.state.author)} target=\"_top\">Tweet</a>\n      </div>\n    );\n  }\n}\n\nconst container = ReactDOM.createRoot(document.getElementById(\"root\"));\n\ncontainer.render(<RandomQuoteMachine/>);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,kBAAN,SAAiCF,KAAK,CAACG,SAAvC,CAAiD;EAC/CC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,MAAM,EAAE,EADG;MAEXC,WAAW,EAAE,CAFF;MAGXC,KAAK,EAAE,YAHI;MAIXC,MAAM,EAAE;IAJG,CAAb,CAFiB,CAQjB;IACA;EACD;;EAEDC,iBAAiB,GAAG;IAClBC,KAAK,CAAC,wIAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACD,CAHD,EAIGF,IAJH,CAIQG,IAAI,IAAI;MACd,IAAIC,WAAW,GAAG,KAAKC,cAAL,CAAoBF,IAAI,CAACT,MAAL,CAAYY,MAAhC,CAAlB;MACA,KAAKC,QAAL,CAAc;QACZb,MAAM,EAAES,IAAI,CAACT,MADD;QAEZC,WAAW,EAAEQ,IAAI,CAACT,MAAL,CAAYY,MAFb;QAGZV,KAAK,EAAEO,IAAI,CAACT,MAAL,CAAYU,WAAZ,EAAyBR,KAHpB;QAIZC,MAAM,EAAEM,IAAI,CAACT,MAAL,CAAYU,WAAZ,EAAyBP;MAJrB,CAAd;IAMD,CAZD;EAaD;;EAEDW,WAAW,GAAG;IACZ,IAAIJ,WAAW,GAAG,KAAKC,cAAL,CAAoB,KAAKZ,KAAL,CAAWE,WAA/B,CAAlB;IACA,KAAKY,QAAL,CAAed,KAAD,KAAY,EACxB,GAAGA,KADqB;MAExBG,KAAK,EAAEH,KAAK,CAACC,MAAN,CAAaU,WAAb,EAA0BR,KAFT;MAGxBC,MAAM,EAAEJ,KAAK,CAACC,MAAN,CAAaU,WAAb,EAA0BP;IAHV,CAAZ,CAAd;EAKD;;EAEDQ,cAAc,CAACV,WAAD,EAAc;IAC1B,OAAOc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAchB,WAAzB,CAAP;EACD;;EAEDiB,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAG,EAAE,EAAC,MAAN;QAAA,UAAc,KAAKnB,KAAL,CAAWG;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAG,EAAE,EAAC,QAAN;QAAA,UAAgB,KAAKH,KAAL,CAAWI;MAA3B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,EAAE,EAAC,WAAX;QAAuB,SAAS,EAAC,SAAjC;QAA2C,OAAO,EAAE,KAAKW,WAAzD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAG,EAAE,EAAC,aAAN;QAAoB,SAAS,EAAC,SAA9B;QAAwC,IAAI,EAAE,2CAA2CK,kBAAkB,CAAC,MAAM,KAAKpB,KAAL,CAAWG,KAAjB,GAAyB,IAAzB,GAAgC,KAAKH,KAAL,CAAWI,MAA5C,CAA3G;QAAgK,MAAM,EAAC,MAAvK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;AAnD8C;;AAsDjD,MAAMiB,SAAS,GAAG1B,QAAQ,CAAC2B,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAlB;AAEAH,SAAS,CAACF,MAAV,eAAiB,QAAC,kBAAD;EAAA;EAAA;EAAA;AAAA,QAAjB"},"metadata":{},"sourceType":"module"}